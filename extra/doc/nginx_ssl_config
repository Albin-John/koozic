# Let's Encrypt:
# git clone https://github.com/letsencrypt/letsencrypt
# cd letsencrypt
# service nginx stop
# ./letsencrypt-auto certonly -d <your_domain> --rsa-key-size 4096
# Use cert.pem for ssl_certificate and privkey.pem for ssl_certificate_key

# Additional protection:
# openssl dhparam -out dh4096.pem 4096
# To bu used for ssl_dhparam

## odoo backend ##
upstream odoo {
    server 127.0.0.1:8069;
}

## https site##
server {
    listen      443 default;
    server_name <your_domain>;
    root        /usr/share/nginx/html;
    index       index.html index.htm;

    # log files
    access_log  /var/log/nginx/odoo.access.log;
    error_log   /var/log/nginx/odoo.error.log;

    # ssl files
    ssl on;
    ssl_certificate     /etc/nginx/cert.crt;
    ssl_certificate_key /etc/nginx/cert.key;
    ssl_dhparam         /etc/nginx/dh4096.pem;
    keepalive_timeout   60;

    # limit ciphers
    ssl_prefer_server_ciphers on;
    ssl_ciphers             EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
    ssl_ecdh_curve secp384r1;

    # proxy buffers
    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    ## default location ##
    location / {
        proxy_pass  http://odoo;
        # force timeouts if the backend dies
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_redirect off;

        # set headers
        proxy_set_header    Host            $host;
        proxy_set_header    X-Real-IP       $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto https;
    }
}

## http redirects to https ##
server {
    listen      80;
    server_name patty.martinelli.be;

    # Strict Transport Security
    add_header Strict-Transport-Security max-age=2592000;
    rewrite ^/.*$ https://$host$request_uri? permanent;
}
